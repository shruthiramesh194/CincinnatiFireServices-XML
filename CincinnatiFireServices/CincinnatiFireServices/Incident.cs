// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var incident = Incident.FromJson(jsonString);

namespace IncidentAPI
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Incident
    {
        [JsonProperty("address_x")]
        public string AddressX { get; set; }

        [JsonProperty("latitude_x")]
        public string LatitudeX { get; set; }

        [JsonProperty("longitude_x")]
        public string LongitudeX { get; set; }

        [JsonProperty("agency")]
        public string Agency { get; set; }

        [JsonProperty("create_time_incident")]
        public DateTimeOffset CreateTimeIncident { get; set; }

        [JsonProperty("disposition_text")]
        public string DispositionText { get; set; }

        [JsonProperty("event_number")]
        public string EventNumber { get; set; }

        [JsonProperty("incident_type_id")]
        public string IncidentTypeId { get; set; }

        [JsonProperty("incident_type_desc")]
        public string IncidentTypeDesc { get; set; }

        [JsonProperty("neighborhood")]
        public string Neighborhood { get; set; }

        [JsonProperty("arrival_time_primary_unit", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ArrivalTimePrimaryUnit { get; set; }

        [JsonProperty("beat")]
        public string Beat { get; set; }

        [JsonProperty("closed_time_incident")]
        public DateTimeOffset ClosedTimeIncident { get; set; }

        [JsonProperty("dispatch_time_primary_unit")]
        public DateTimeOffset DispatchTimePrimaryUnit { get; set; }

        [JsonProperty("cfd_incident_type")]
        public string CfdIncidentType { get; set; }

        [JsonProperty("cfd_incident_type_group")]
        public string CfdIncidentTypeGroup { get; set; }

        [JsonProperty("community_council_neighborhood")]
        public string CommunityCouncilNeighborhood { get; set; }
    }

    public partial class Incident
    {
        public static List<Incident> FromJson(string json) => JsonConvert.DeserializeObject<List<Incident>>(json, IncidentAPI.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Incident> self) => JsonConvert.SerializeObject(self, IncidentAPI.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

